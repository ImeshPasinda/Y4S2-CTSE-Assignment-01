name: cicd-workflow to create docker image and upload into AWS ECR

on:
  push:
    branches: [ "development" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Setup AWS ECR Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Install dependencies for all services (optional)
      run: |
        for service in authenticate course content enrollment payment; do
          if [ -f services/$service/package.json ]; then
            echo "Installing dependencies for $service..."
            cd services/$service
            npm install
            cd -
          fi
        done

    - name: Build and Push Docker images to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
        ECR_REPO_PREFIX: learnopia
      run: |
        for service in authenticate course content enrollment payment; do
          IMAGE_NAME="$ECR_REGISTRY/$ECR_REPO_PREFIX/$service:$IMAGE_TAG"
          echo "Building and pushing $IMAGE_NAME"
          docker build -t $IMAGE_NAME services/$service
          docker push $IMAGE_NAME
        done

    - name: Register new ECS Task Definition and Update ECS Service
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
        ECR_REPO_PREFIX: learnopia
        ECS_CLUSTER: learnopia-cluster
        ECS_SERVICE: authenticate-service # change to your ECS service name
        TASK_DEFINITION_FAMILY: authenticate-task # change to your task definition family
      run: |
        # Define the container definitions with the new image tags
        CONTAINER_DEFINITIONS=$(jq -n \
          --arg image "$ECR_REGISTRY/$ECR_REPO_PREFIX/authenticate:$IMAGE_TAG" \
          '[
            {
              "name": "authenticate-container",
              "image": $image,
              "essential": true,
              "portMappings": [
                {
                  "containerPort": 5000,
                  "hostPort": 0
                }
              ]
            }
          ]')

        # Register the new task definition revision
        TASK_DEFINITION=$(aws ecs register-task-definition \
          --family $TASK_DEFINITION_FAMILY \
          --container-definitions "$CONTAINER_DEFINITIONS" \
          --query 'taskDefinition.taskDefinitionArn' \
          --output text)

        # Update the ECS service to use the new task definition revision
        aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service $ECS_SERVICE \
          --task-definition $TASK_DEFINITION
